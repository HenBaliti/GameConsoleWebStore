@model GameConsuleWebStore.Models.Product
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Details";
}

@*-------------------------------------------------------*@
@*------------------------Google Map---------------------*@
@*-------------------------------------------------------*@
<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 400px;
        width: 400px;
    }

    /* Optional: Makes the sample page fill the window. */
</style>

@*-------------------------------------------------------*@
@*------------------------Google Map---------------------*@
@*-------------------------------------------------------*@


<h2>Details - @Html.DisplayFor(model => model.Name)</h2>
<hr />

<div class="col-md-4" style="position: absolute; left: 600px;">
    <div class="box">
        <div class="imageContainer">
            <div class="image">
                <img class="imgViewGameIndex" src="~/images/@Html.DisplayFor(model => model.pathPicture)" style=" width: auto; height: 350px; margin: 0 auto;"/>
            </div>
            <div class="actions">
                <a asp-controller="ShoppingCart" asp-action="OrderNow" asp-route-id="@ViewBag.ProdIdForView" title="Add To Basket"><img class="onPicOverViewGameIndex" src="~/images/shopping-cart.svg" /></a>
                @{
                    if (Context.Session.GetString("UserType") == "Admin")
                    {
                        <a asp-action="Edit" asp-route-id="@ViewBag.ProdIdForView" title="Edit Product"><img class="onPicOverViewGameIndex" src="~/images/EditPic.svg" /></a>
                        <a asp-action="Delete" asp-route-id="@ViewBag.ProdIdForView" title="Delete Product"><img style="position: absolute; top: 10px; right: 85px;" src="~/images/remove.png" /></a>
                    }
                }
            </div>
        </div>
    </div>
</div>

<div class="DetailGameShow">

    <dl class="dl-horizontal col-md-7">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ReleaseDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.StockUnit)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.StockUnit)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ConsoleType)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ConsoleType)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Category)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.StoreLocation)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.StoreLocation)
        </dd>
        <dd>
            <div id="map">
            </div>
        </dd>
        <dd>
            <div>
                <a asp-action="Index">Back to Shop</a>
            </div>
        </dd>
    </dl>
</div>


<input hidden type="text" name="LatNum" id='LatNum' value="@ViewBag.StoreMapLatitude" />
<input hidden type="text" name="LngNum" id='LngNum' value="@ViewBag.StoreMapLongitude" />


<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>


<script>
    let map;

    function initMap() {

        var LatOfProduct = parseFloat(document.getElementById('LatNum').value);
        var LngOfProduct = parseFloat(document.getElementById('LngNum').value);

        map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: LatOfProduct, lng: LngOfProduct },
            zoom: 16,
        });
        // The marker, positioned at Uluru
        const marker = new google.maps.Marker({
            position: { lat: LatOfProduct, lng: LngOfProduct },
            map: map,
        });
    }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDF7eSXpi_XXXJAAJ7VRmCN8Ig9sBEOH7Y&callback=initMap&libraries=&v=weekly"
        defer></script>
